update customer set first_name='wens' where last_name='navallo';

UPDATE customer SET first_name = 'Wens', email = 'ako@ikaw.com' WHERE last_name = 'Kai' and email = 'gatu@undopse.gov' ;

UPDATE customer SET first_name = 'Wens', email = 'ako@ikaw.com' WHERE last_name = 'Kai' and email = 'gatu@undopse.govM' ;

UPDATE customer SET first_name = 'Wens', email = 'ako@ikaw.com' WHERE last_name = 'Kai' or email = 'gatu@undopse.govM' ;

UPDATE customer SET first_name = 'Wens2', birthdate = '9/9/1999' WHERE last_name = 'Kai' ;

UPDATE customer SET first_name = 'Wens2', birthdate = '9/9/1999' WHERE last_name = 'Kai' and email = 'gatu@undopse.gov' ;

UPDATE customer SET first_name = 'Wens3' WHERE last_name = 'Kai' and email = 'gatu@undopse.gov' ;


		self.TblName = [];
		self.PrimaryKey = [];
		self.SetColNameToUpdate = [];
		self.SetColValToUpdate =[];
		self.WhereColName = [];
		self.WhereColVal = [];
		self.WhereComOperator = [];
		self.WhereLogicOperator = [];


Table Name:['customer']
Set Column Name:['first_name', 'email']
Set Column Value:["'wens'", "'ako@ikaw.com'"]
Where Column Name :['last_name']
Where Comparison Operator:['=']
Where Column Value:["'kai'"]
Where Logical Operator:['and']



Given PK = 1000

TableAllColumnName['customerid,'last_name','first_name','birthdate','email\n']

                    
SplitRecord['1000','Kai','Jennings','6/12/2000','gatu@undopse\n']




Assemble the Record List (Record to update).

RecordToUpdate ['1000','Kai','wens','6/12/2000,'ako@ikaw.com\n']

toString='1000,Kai,Wens,6/12/2000/,ako@ikaw.com\n'
then insert to AllRecords
Write to file


Output for modification
"['1000', 'Kai', 'wens', '6/12/2009', 'ako@ikaw.com']"


Primary Key Algorithm:

1. Get table
2. Load to memory andassign variables to Allrecords
3. Get all column and assign to variables TableAllColNames (from meta data)
 3.1 get the index search from TableAllColNames
4. Extract each record/tuple from TableAllColName to variable record
5. Convert record to list
6. Get index # using TableAllColumnName as reference
7. Compare thefirst whereColVal to index #
8.	If found, return primarykeylist = index #
		Proceed to step 10
9. 	Else: "Record not found", abort operation
10. Check if there are still columnname
11. 	If no, save PK to self.PrimaryKey	
12. 	If yes, perform step 3 to 7
13.		Add to primarykeylist this time two primary keys
14. Compare PK in the primarykeylist
15. 	If not equal = "Record not found"
16. 	If match, save to self.PrimaryKey


Search Primary Key

TableAllColumnName['customerid,'last_name','first_name','birthdate','email\n']

                    
SplitRecord['1000','Kai','Jennings','6/12/2000','gatu@undopse\n']


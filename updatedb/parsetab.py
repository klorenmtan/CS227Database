
# /home/wens/git-scm/CS227Database/testdb/parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.5'

_lr_method = 'LALR'

_lr_signature = 'ABDAF6D63272DCFC3134D4399F4C65E4'
    
_lr_action_items = {'ID':([2,3,13,14,15,16,17,24,27,29,34,35,37,38,40,44,48,49,51,54,56,58,59,60,61,62,64,65,66,71,73,86,87,88,89,90,92,95,96,98,104,],[8,9,18,19,21,9,23,36,36,36,52,53,-52,-54,36,-53,69,36,71,75,9,-36,36,-37,-38,-39,36,36,19,-24,-26,89,71,9,-25,36,36,36,36,36,36,]),'INT':([24,26,27,29,37,38,40,44,49,51,58,59,60,61,62,64,65,71,73,87,89,90,92,95,96,98,104,],[37,37,37,37,-52,-54,37,-53,37,37,-36,37,-37,-38,-39,37,37,-24,-26,37,-25,37,37,37,37,37,37,]),'UPDATE':([0,],[2,]),'OR':([36,37,38,39,42,43,44,46,47,57,70,71,73,75,76,78,80,81,82,89,90,92,95,96,103,106,],[-48,-52,-54,-50,-34,64,-53,64,64,64,64,-24,-26,-49,-51,-33,-35,-31,-32,-25,95,95,95,95,64,64,]),'RPAREN':([9,21,23,33,36,37,38,39,42,44,52,53,55,57,69,71,73,74,75,76,78,80,81,82,84,89,90,91,93,94,97,99,100,101,102,103,105,106,],[-40,-41,-42,-18,-48,-52,-54,-50,-34,-53,-22,-43,76,78,-16,-24,-26,-23,-49,-51,-33,-35,-31,-32,-17,-25,-19,-44,-20,-21,-30,-45,-27,-28,105,-46,-29,-47,]),'STRING':([24,26,27,29,37,38,40,44,49,51,58,59,60,61,62,64,65,71,73,87,89,90,92,95,96,98,104,],[38,38,38,38,-52,-54,38,-53,38,38,-36,38,-37,-38,-39,38,38,-24,-26,38,-25,38,38,38,38,38,38,]),'NATURAL':([9,21,22,23,37,38,44,53,69,71,73,89,90,91,],[-40,-41,31,-42,-52,-54,-53,-43,31,-24,-26,-25,31,31,]),'COMMA':([9,12,21,22,23,37,38,44,45,53,91,],[-40,17,-41,17,-42,-52,-54,-53,66,-43,17,]),'SELECT':([0,40,79,96,],[3,56,56,56,]),'DOT':([9,23,36,71,],[15,35,54,86,]),'$end':([1,4,5,6,25,28,30,50,63,67,68,85,],[-2,-3,-1,0,-10,-4,-6,-7,-11,-5,-8,-9,]),'LT':([36,37,38,39,41,44,75,76,],[-48,-52,-54,-50,62,-53,-49,-51,]),'JOIN':([9,21,22,23,31,37,38,44,52,53,69,71,73,89,90,91,],[-40,-41,34,-42,48,-52,-54,-53,34,-43,34,-24,-26,-25,34,34,]),'WHERE':([9,18,20,21,22,23,32,33,36,37,38,39,44,45,52,53,69,71,73,74,75,76,80,83,84,89,90,91,93,94,97,99,100,101,105,],[-40,24,27,-41,29,-42,49,-18,-48,-52,-54,-50,-53,-14,-22,-43,-16,-24,-26,-23,-49,-51,-35,-15,-17,-25,-19,98,-20,-21,-30,104,-27,-28,-29,]),'EOL':([9,18,20,21,22,23,32,33,36,37,38,39,42,43,44,45,46,47,52,53,69,70,71,73,74,75,76,78,80,81,82,83,84,89,90,93,94,97,100,101,105,],[-40,25,28,-41,30,-42,50,-18,-48,-52,-54,-50,-34,63,-53,-14,67,68,-22,-43,-16,85,-24,-26,-23,-49,-51,-33,-35,-31,-32,-15,-17,-25,-19,-20,-21,-30,-27,-28,-29,]),'FROM':([7,9,10,11,12,21,23,53,77,],[13,-40,16,-12,-13,-41,-42,-43,88,]),'ALL':([3,56,],[11,11,]),'SET':([8,],[14,]),'GT':([36,37,38,39,41,44,75,76,],[-48,-52,-54,-50,61,-53,-49,-51,]),'AND':([36,37,38,39,42,43,44,46,47,57,70,71,73,75,76,78,80,81,82,89,90,92,95,96,103,106,],[-48,-52,-54,-50,-34,65,-53,65,65,65,65,-24,-26,-49,-51,-33,-35,65,-32,-25,92,92,92,92,65,65,]),'LPAREN':([24,27,29,37,38,40,44,49,58,59,60,61,62,64,65,71,73,89,90,92,95,96,98,104,],[40,40,40,-52,-54,40,-53,40,-36,79,-37,-38,-39,40,40,-24,-26,-25,96,96,96,96,40,40,]),'EQ':([19,36,37,38,39,41,44,71,72,73,75,76,89,],[26,-48,-52,-54,-50,58,-53,-24,87,-26,-49,-51,-25,]),'DOUBLE':([24,26,27,29,37,38,40,44,49,51,58,59,60,61,62,64,65,71,73,87,89,90,92,95,96,98,104,],[44,44,44,44,-52,-54,44,-53,44,44,-36,44,-37,-38,-39,44,44,-24,-26,44,-25,44,44,44,44,44,44,]),'NEQ':([36,37,38,39,41,44,75,76,],[-48,-52,-54,-50,60,-53,-49,-51,]),'ON':([33,52,74,],[51,-22,-23,]),'DELETE':([0,],[7,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'inner_select_statement':([40,79,96,],[55,55,55,]),'join_value':([51,87,],[72,90,]),'select_statement':([0,],[1,]),'join_search_condition':([90,92,95,96,],[94,100,101,102,]),'literal':([24,26,27,29,40,49,51,59,64,65,87,90,92,95,96,98,104,],[39,45,39,39,39,39,73,39,39,39,73,39,39,39,39,39,39,]),'value':([24,27,29,40,49,59,64,65,90,92,95,96,98,104,],[41,41,41,41,41,80,41,41,41,41,41,41,41,41,]),'select_columns':([3,56,],[10,77,]),'join_clause':([22,69,90,91,],[32,84,93,99,]),'comparison_predicate':([24,27,29,40,49,64,65,90,92,95,96,98,104,],[42,42,42,42,42,42,42,97,97,97,97,42,42,]),'search_condition':([24,27,29,40,49,64,65,98,104,],[43,46,47,57,70,81,82,103,106,]),'delete_statement':([0,],[4,]),'join_list':([22,52,69,90,91,],[33,74,33,33,33,]),'update_statement':([0,],[5,]),'id_list':([3,16,56,88,],[12,22,12,91,]),'statement':([0,],[6,]),'set_clause_list':([14,66,],[20,83,]),'comp_op':([41,],[59,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> update_statement','statement',1,'p_statement','LexerParser.py',107),
  ('statement -> select_statement','statement',1,'p_statement','LexerParser.py',108),
  ('statement -> delete_statement','statement',1,'p_statement','LexerParser.py',109),
  ('update_statement -> UPDATE ID SET set_clause_list EOL','update_statement',5,'p_update_statement','LexerParser.py',114),
  ('update_statement -> UPDATE ID SET set_clause_list WHERE search_condition EOL','update_statement',7,'p_update_statement','LexerParser.py',115),
  ('select_statement -> SELECT select_columns FROM id_list EOL','select_statement',5,'p_select_statement','LexerParser.py',123),
  ('select_statement -> SELECT select_columns FROM id_list join_clause EOL','select_statement',6,'p_select_statement','LexerParser.py',124),
  ('select_statement -> SELECT select_columns FROM id_list WHERE search_condition EOL','select_statement',7,'p_select_statement','LexerParser.py',125),
  ('select_statement -> SELECT select_columns FROM id_list join_clause WHERE search_condition EOL','select_statement',8,'p_select_statement','LexerParser.py',126),
  ('delete_statement -> DELETE FROM ID EOL','delete_statement',4,'p_delete_statement','LexerParser.py',137),
  ('delete_statement -> DELETE FROM ID WHERE search_condition EOL','delete_statement',6,'p_delete_statement','LexerParser.py',138),
  ('select_columns -> ALL','select_columns',1,'p_select_columns','LexerParser.py',146),
  ('select_columns -> id_list','select_columns',1,'p_select_columns','LexerParser.py',147),
  ('set_clause_list -> ID EQ literal','set_clause_list',3,'p_set_clause_list','LexerParser.py',152),
  ('set_clause_list -> ID EQ literal COMMA set_clause_list','set_clause_list',5,'p_set_clause_list','LexerParser.py',153),
  ('join_clause -> NATURAL JOIN ID','join_clause',3,'p_join_clause','LexerParser.py',161),
  ('join_clause -> NATURAL JOIN ID join_clause','join_clause',4,'p_join_clause','LexerParser.py',162),
  ('join_clause -> join_list','join_clause',1,'p_join_clause','LexerParser.py',163),
  ('join_clause -> join_list ON join_value EQ join_value','join_clause',5,'p_join_clause','LexerParser.py',164),
  ('join_clause -> join_list ON join_value EQ join_value join_clause','join_clause',6,'p_join_clause','LexerParser.py',165),
  ('join_clause -> join_list ON join_value EQ join_value join_search_condition','join_clause',6,'p_join_clause','LexerParser.py',166),
  ('join_list -> JOIN ID','join_list',2,'p_join_list','LexerParser.py',180),
  ('join_list -> JOIN ID join_list','join_list',3,'p_join_list','LexerParser.py',181),
  ('join_value -> ID','join_value',1,'p_join_value','LexerParser.py',189),
  ('join_value -> ID DOT ID','join_value',3,'p_join_value','LexerParser.py',190),
  ('join_value -> literal','join_value',1,'p_join_value','LexerParser.py',191),
  ('join_search_condition -> AND join_search_condition','join_search_condition',2,'p_join_search_condition','LexerParser.py',199),
  ('join_search_condition -> OR join_search_condition','join_search_condition',2,'p_join_search_condition','LexerParser.py',200),
  ('join_search_condition -> LPAREN join_search_condition RPAREN','join_search_condition',3,'p_join_search_condition','LexerParser.py',201),
  ('join_search_condition -> comparison_predicate','join_search_condition',1,'p_join_search_condition','LexerParser.py',202),
  ('search_condition -> search_condition OR search_condition','search_condition',3,'p_search_condition','LexerParser.py',212),
  ('search_condition -> search_condition AND search_condition','search_condition',3,'p_search_condition','LexerParser.py',213),
  ('search_condition -> LPAREN search_condition RPAREN','search_condition',3,'p_search_condition','LexerParser.py',214),
  ('search_condition -> comparison_predicate','search_condition',1,'p_search_condition','LexerParser.py',215),
  ('comparison_predicate -> value comp_op value','comparison_predicate',3,'p_comparison_predicate','LexerParser.py',223),
  ('comp_op -> EQ','comp_op',1,'p_comp_op','LexerParser.py',228),
  ('comp_op -> NEQ','comp_op',1,'p_comp_op','LexerParser.py',229),
  ('comp_op -> GT','comp_op',1,'p_comp_op','LexerParser.py',230),
  ('comp_op -> LT','comp_op',1,'p_comp_op','LexerParser.py',231),
  ('id_list -> ID','id_list',1,'p_id_list','LexerParser.py',236),
  ('id_list -> ID DOT ID','id_list',3,'p_id_list','LexerParser.py',237),
  ('id_list -> id_list COMMA ID','id_list',3,'p_id_list','LexerParser.py',238),
  ('id_list -> id_list COMMA ID DOT ID','id_list',5,'p_id_list','LexerParser.py',239),
  ('inner_select_statement -> SELECT select_columns FROM id_list','inner_select_statement',4,'p_inner_select_statement','LexerParser.py',252),
  ('inner_select_statement -> SELECT select_columns FROM id_list join_clause','inner_select_statement',5,'p_inner_select_statement','LexerParser.py',253),
  ('inner_select_statement -> SELECT select_columns FROM id_list WHERE search_condition','inner_select_statement',6,'p_inner_select_statement','LexerParser.py',254),
  ('inner_select_statement -> SELECT select_columns FROM id_list join_clause WHERE search_condition','inner_select_statement',7,'p_inner_select_statement','LexerParser.py',255),
  ('value -> ID','value',1,'p_value','LexerParser.py',267),
  ('value -> ID DOT ID','value',3,'p_value','LexerParser.py',268),
  ('value -> literal','value',1,'p_value','LexerParser.py',269),
  ('value -> LPAREN inner_select_statement RPAREN','value',3,'p_value','LexerParser.py',270),
  ('literal -> INT','literal',1,'p_literal','LexerParser.py',278),
  ('literal -> DOUBLE','literal',1,'p_literal','LexerParser.py',279),
  ('literal -> STRING','literal',1,'p_literal','LexerParser.py',280),
]


# /home/wens/git-scm/CS227Database/testdb/parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.5'

_lr_method = 'LALR'

_lr_signature = '582428A17C4BB21771315780FF36810B'
    
_lr_action_items = {'NATURAL':([9,19,20,21,37,40,44,45,66,70,71,89,90,91,],[-40,-42,-41,27,-53,-52,-54,-43,27,-26,-24,27,-25,27,]),'GT':([37,38,40,41,42,44,77,81,],[-53,-50,-52,-48,59,-54,-49,-51,]),'STRING':([25,28,33,35,37,40,43,44,49,50,55,56,58,59,60,61,62,70,71,84,89,90,93,94,95,98,104,],[44,44,44,44,-53,-52,44,-54,44,44,44,44,-36,-38,-39,-37,44,-26,-24,44,44,-25,44,44,44,44,44,]),'AND':([36,37,38,39,40,41,44,47,53,63,70,71,72,75,76,77,79,80,81,89,90,93,94,95,103,106,],[55,-53,-50,-34,-52,-48,-54,55,55,55,-26,-24,55,-32,55,-49,-35,-33,-51,93,-25,93,93,93,55,55,]),'SET':([12,],[17,]),'DOUBLE':([25,28,33,35,37,40,43,44,49,50,55,56,58,59,60,61,62,70,71,84,89,90,93,94,95,98,104,],[37,37,37,37,-53,-52,37,-54,37,37,37,37,-36,-38,-39,-37,37,-26,-24,37,37,-25,37,37,37,37,37,]),'INT':([25,28,33,35,37,40,43,44,49,50,55,56,58,59,60,61,62,70,71,84,89,90,93,94,95,98,104,],[40,40,40,40,-53,-52,40,-54,40,40,40,40,-36,-38,-39,-37,40,-26,-24,40,40,-25,40,40,40,40,40,]),'ID':([1,2,13,14,15,16,17,25,26,28,30,35,37,40,43,44,46,49,50,55,56,57,58,59,60,61,62,65,70,71,73,84,85,88,89,90,93,94,95,98,104,],[9,12,18,19,20,9,22,41,45,41,48,41,-53,-52,41,-54,66,71,41,41,41,77,-36,-38,-39,-37,41,9,-26,-24,22,71,90,9,41,-25,41,41,41,41,41,]),'EQ':([22,37,38,40,41,42,44,69,70,71,77,81,90,],[33,-53,-50,-52,-48,58,-54,84,-26,-24,-49,-51,-25,]),'LPAREN':([25,28,35,37,40,43,44,50,55,56,58,59,60,61,62,70,71,89,90,93,94,95,98,104,],[43,43,43,-53,-52,43,-54,43,43,43,-36,-38,-39,-37,78,-26,-24,94,-25,94,94,94,43,43,]),'ALL':([1,65,],[11,11,]),'NEQ':([37,38,40,41,42,44,77,81,],[-53,-50,-52,-48,61,-54,-49,-51,]),'OR':([36,37,38,39,40,41,44,47,53,63,70,71,72,75,76,77,79,80,81,89,90,93,94,95,103,106,],[56,-53,-50,-34,-52,-48,-54,56,56,56,-26,-24,56,-32,-31,-49,-35,-33,-51,95,-25,95,95,95,56,56,]),'SELECT':([0,43,78,94,],[1,65,65,65,]),'DELETE':([0,],[6,]),'RPAREN':([9,19,20,31,37,38,39,40,41,44,45,48,63,64,66,68,70,71,75,76,77,79,80,81,83,89,90,91,92,96,97,99,100,101,102,103,105,106,],[-40,-42,-41,-18,-53,-50,-34,-52,-48,-54,-43,-22,80,81,-16,-23,-26,-24,-32,-31,-49,-35,-33,-51,-17,-19,-25,-44,-20,-30,-21,-45,-27,105,-28,-46,-29,-47,]),'FROM':([6,8,9,10,11,19,20,45,82,],[13,-13,-40,16,-12,-42,-41,-43,88,]),'$end':([3,4,5,7,24,29,34,51,54,67,74,86,],[-1,-2,-3,0,-10,-6,-4,-7,-11,-8,-5,-9,]),'LT':([37,38,40,41,42,44,77,81,],[-53,-50,-52,-48,60,-54,-49,-51,]),'EOL':([9,18,19,20,21,23,31,32,36,37,38,39,40,41,44,45,47,48,52,53,66,68,70,71,72,75,76,77,79,80,81,83,87,89,90,92,96,97,100,102,105,],[-40,24,-42,-41,29,34,-18,51,54,-53,-50,-34,-52,-48,-54,-43,67,-22,-14,74,-16,-23,-26,-24,86,-32,-31,-49,-35,-33,-51,-17,-15,-19,-25,-20,-30,-21,-27,-28,-29,]),'UPDATE':([0,],[2,]),'WHERE':([9,18,19,20,21,23,31,32,37,38,40,41,44,45,48,52,66,68,70,71,77,79,81,83,87,89,90,91,92,96,97,99,100,102,105,],[-40,25,-42,-41,28,35,-18,50,-53,-50,-52,-48,-54,-43,-22,-14,-16,-23,-26,-24,-49,-35,-51,-17,-15,-19,-25,98,-20,-30,-21,104,-27,-28,-29,]),'COMMA':([8,9,19,20,21,37,40,44,45,52,91,],[14,-40,-42,-41,14,-53,-52,-54,-43,73,14,]),'JOIN':([9,19,20,21,27,37,40,44,45,48,66,70,71,89,90,91,],[-40,-42,-41,30,46,-53,-52,-54,-43,30,30,-26,-24,30,-25,30,]),'DOT':([9,19,41,71,],[15,26,57,85,]),'ON':([31,48,68,],[49,-22,-23,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'comp_op':([42,],[62,]),'select_columns':([1,65,],[10,82,]),'search_condition':([25,28,35,43,50,55,56,98,104,],[36,47,53,63,72,75,76,103,106,]),'update_statement':([0,],[3,]),'inner_select_statement':([43,78,94,],[64,64,64,]),'literal':([25,28,33,35,43,49,50,55,56,62,84,89,93,94,95,98,104,],[38,38,52,38,38,70,38,38,38,38,70,38,38,38,38,38,38,]),'comparison_predicate':([25,28,35,43,50,55,56,89,93,94,95,98,104,],[39,39,39,39,39,39,39,96,96,96,96,39,39,]),'join_search_condition':([89,93,94,95,],[97,100,101,102,]),'join_value':([49,84,],[69,89,]),'statement':([0,],[7,]),'value':([25,28,35,43,50,55,56,62,89,93,94,95,98,104,],[42,42,42,42,42,42,42,79,42,42,42,42,42,42,]),'id_list':([1,16,65,88,],[8,21,8,91,]),'set_clause_list':([17,73,],[23,87,]),'delete_statement':([0,],[5,]),'join_list':([21,48,66,89,91,],[31,68,31,31,31,]),'select_statement':([0,],[4,]),'join_clause':([21,66,89,91,],[32,83,92,99,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> update_statement','statement',1,'p_statement','LexerParser.py',107),
  ('statement -> select_statement','statement',1,'p_statement','LexerParser.py',108),
  ('statement -> delete_statement','statement',1,'p_statement','LexerParser.py',109),
  ('update_statement -> UPDATE ID SET set_clause_list EOL','update_statement',5,'p_update_statement','LexerParser.py',114),
  ('update_statement -> UPDATE ID SET set_clause_list WHERE search_condition EOL','update_statement',7,'p_update_statement','LexerParser.py',115),
  ('select_statement -> SELECT select_columns FROM id_list EOL','select_statement',5,'p_select_statement','LexerParser.py',123),
  ('select_statement -> SELECT select_columns FROM id_list join_clause EOL','select_statement',6,'p_select_statement','LexerParser.py',124),
  ('select_statement -> SELECT select_columns FROM id_list WHERE search_condition EOL','select_statement',7,'p_select_statement','LexerParser.py',125),
  ('select_statement -> SELECT select_columns FROM id_list join_clause WHERE search_condition EOL','select_statement',8,'p_select_statement','LexerParser.py',126),
  ('delete_statement -> DELETE FROM ID EOL','delete_statement',4,'p_delete_statement','LexerParser.py',137),
  ('delete_statement -> DELETE FROM ID WHERE search_condition EOL','delete_statement',6,'p_delete_statement','LexerParser.py',138),
  ('select_columns -> ALL','select_columns',1,'p_select_columns','LexerParser.py',146),
  ('select_columns -> id_list','select_columns',1,'p_select_columns','LexerParser.py',147),
  ('set_clause_list -> ID EQ literal','set_clause_list',3,'p_set_clause_list','LexerParser.py',152),
  ('set_clause_list -> ID EQ literal COMMA set_clause_list','set_clause_list',5,'p_set_clause_list','LexerParser.py',153),
  ('join_clause -> NATURAL JOIN ID','join_clause',3,'p_join_clause','LexerParser.py',161),
  ('join_clause -> NATURAL JOIN ID join_clause','join_clause',4,'p_join_clause','LexerParser.py',162),
  ('join_clause -> join_list','join_clause',1,'p_join_clause','LexerParser.py',163),
  ('join_clause -> join_list ON join_value EQ join_value','join_clause',5,'p_join_clause','LexerParser.py',164),
  ('join_clause -> join_list ON join_value EQ join_value join_clause','join_clause',6,'p_join_clause','LexerParser.py',165),
  ('join_clause -> join_list ON join_value EQ join_value join_search_condition','join_clause',6,'p_join_clause','LexerParser.py',166),
  ('join_list -> JOIN ID','join_list',2,'p_join_list','LexerParser.py',180),
  ('join_list -> JOIN ID join_list','join_list',3,'p_join_list','LexerParser.py',181),
  ('join_value -> ID','join_value',1,'p_join_value','LexerParser.py',189),
  ('join_value -> ID DOT ID','join_value',3,'p_join_value','LexerParser.py',190),
  ('join_value -> literal','join_value',1,'p_join_value','LexerParser.py',191),
  ('join_search_condition -> AND join_search_condition','join_search_condition',2,'p_join_search_condition','LexerParser.py',199),
  ('join_search_condition -> OR join_search_condition','join_search_condition',2,'p_join_search_condition','LexerParser.py',200),
  ('join_search_condition -> LPAREN join_search_condition RPAREN','join_search_condition',3,'p_join_search_condition','LexerParser.py',201),
  ('join_search_condition -> comparison_predicate','join_search_condition',1,'p_join_search_condition','LexerParser.py',202),
  ('search_condition -> search_condition OR search_condition','search_condition',3,'p_search_condition','LexerParser.py',212),
  ('search_condition -> search_condition AND search_condition','search_condition',3,'p_search_condition','LexerParser.py',213),
  ('search_condition -> LPAREN search_condition RPAREN','search_condition',3,'p_search_condition','LexerParser.py',214),
  ('search_condition -> comparison_predicate','search_condition',1,'p_search_condition','LexerParser.py',215),
  ('comparison_predicate -> value comp_op value','comparison_predicate',3,'p_comparison_predicate','LexerParser.py',223),
  ('comp_op -> EQ','comp_op',1,'p_comp_op','LexerParser.py',228),
  ('comp_op -> NEQ','comp_op',1,'p_comp_op','LexerParser.py',229),
  ('comp_op -> GT','comp_op',1,'p_comp_op','LexerParser.py',230),
  ('comp_op -> LT','comp_op',1,'p_comp_op','LexerParser.py',231),
  ('id_list -> ID','id_list',1,'p_id_list','LexerParser.py',236),
  ('id_list -> ID DOT ID','id_list',3,'p_id_list','LexerParser.py',237),
  ('id_list -> id_list COMMA ID','id_list',3,'p_id_list','LexerParser.py',238),
  ('id_list -> id_list COMMA ID DOT ID','id_list',5,'p_id_list','LexerParser.py',239),
  ('inner_select_statement -> SELECT select_columns FROM id_list','inner_select_statement',4,'p_inner_select_statement','LexerParser.py',252),
  ('inner_select_statement -> SELECT select_columns FROM id_list join_clause','inner_select_statement',5,'p_inner_select_statement','LexerParser.py',253),
  ('inner_select_statement -> SELECT select_columns FROM id_list WHERE search_condition','inner_select_statement',6,'p_inner_select_statement','LexerParser.py',254),
  ('inner_select_statement -> SELECT select_columns FROM id_list join_clause WHERE search_condition','inner_select_statement',7,'p_inner_select_statement','LexerParser.py',255),
  ('value -> ID','value',1,'p_value','LexerParser.py',267),
  ('value -> ID DOT ID','value',3,'p_value','LexerParser.py',268),
  ('value -> literal','value',1,'p_value','LexerParser.py',269),
  ('value -> LPAREN inner_select_statement RPAREN','value',3,'p_value','LexerParser.py',270),
  ('literal -> INT','literal',1,'p_literal','LexerParser.py',278),
  ('literal -> DOUBLE','literal',1,'p_literal','LexerParser.py',279),
  ('literal -> STRING','literal',1,'p_literal','LexerParser.py',280),
]

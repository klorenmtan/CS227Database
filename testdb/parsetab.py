
# /home/kat/Desktop/project/CS227Database/testdb/parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.5'

_lr_method = 'LALR'

_lr_signature = 'A39C0E97CBEBDE28F23B68476F2327C1'
    
_lr_action_items = {'SET':([8,],[14,]),'LPAREN':([21,27,29,32,33,37,41,48,49,51,52,53,54,55,60,80,82,93,94,95,96,97,99,101,104,105,112,],[37,37,-61,-63,-62,37,37,37,37,-48,-46,-47,71,-45,37,-33,-35,-34,101,101,101,101,37,101,101,101,37,]),'GT':([29,30,32,33,35,36,68,74,80,81,82,93,],[-61,-57,-63,-62,-59,53,-58,-60,-33,89,-35,-34,]),'ALL':([6,58,],[11,11,]),'INT':([21,26,27,29,32,33,37,41,48,49,51,52,53,54,55,60,64,80,82,88,89,90,91,93,94,95,96,97,99,101,104,105,112,],[29,29,29,-61,-63,-62,29,29,29,29,-48,-46,-47,29,-45,29,29,-33,-35,29,29,29,29,-34,29,29,29,29,29,29,29,29,29,]),'DELETE':([0,],[4,]),'EQ':([19,29,30,32,33,35,36,68,74,80,81,82,93,],[26,-61,-57,-63,-62,-59,55,-58,-60,-33,91,-35,-34,]),'RPAREN':([10,23,25,29,30,32,33,34,35,42,56,57,59,65,68,69,70,72,73,74,76,78,80,82,86,92,93,94,95,96,97,98,100,102,103,106,107,108,109,110,111,113,114,115,116,117,118,],[-49,-50,-51,-61,-57,-63,-62,-43,-59,-18,73,74,-31,-52,-58,-40,-41,-44,-42,-60,-32,-16,-33,-35,-17,-53,-34,-25,-19,-22,-28,-54,-26,-27,-39,-20,-21,-23,-24,-29,-30,-55,118,-36,-37,-56,-38,]),'LT':([29,30,32,33,35,36,68,74,80,81,82,93,],[-61,-57,-63,-62,-59,51,-58,-60,-33,90,-35,-34,]),'SELECT':([0,37,71,101,],[6,58,58,58,]),'ON':([42,59,76,],[64,-31,-32,]),'JOIN':([10,23,24,25,29,32,33,40,59,65,78,80,82,92,93,94,95,96,97,],[-49,-50,38,-51,-61,-63,-62,62,38,-52,38,-33,-35,38,-34,38,38,38,38,]),'OR':([29,30,31,32,33,34,35,46,56,63,68,69,70,72,73,74,77,80,82,93,94,95,96,97,101,104,105,113,117,],[-61,-57,48,-63,-62,-43,-59,48,48,48,-58,-40,-41,-44,-42,-60,48,-33,-35,-34,105,105,105,105,105,105,105,48,48,]),'DOT':([10,25,30,80,],[16,44,47,87,]),'UPDATE':([0,],[2,]),'ID':([2,6,9,14,16,17,18,21,27,29,32,33,37,38,41,44,47,48,49,51,52,53,54,55,58,60,62,64,66,80,82,84,87,88,89,90,91,93,94,95,96,97,99,101,104,105,112,],[8,10,15,19,23,10,25,30,30,-61,-63,-62,30,59,30,65,68,30,30,-48,-46,-47,30,-45,10,30,78,80,19,-33,-35,10,93,80,80,80,80,-34,30,30,30,30,30,30,30,30,30,]),'AND':([29,30,31,32,33,34,35,46,56,63,68,69,70,72,73,74,77,80,82,93,94,95,96,97,101,104,105,113,117,],[-61,-57,49,-63,-62,-43,-59,49,49,49,-58,49,-41,-44,-42,-60,49,-33,-35,-34,104,104,104,104,104,104,104,49,49,]),'NATURAL':([10,23,24,25,29,32,33,65,78,80,82,92,93,94,95,96,97,],[-49,-50,40,-51,-61,-63,-62,-52,40,-33,-35,40,-34,40,40,40,40,]),'STRING':([21,26,27,29,32,33,37,41,48,49,51,52,53,54,55,60,64,80,82,88,89,90,91,93,94,95,96,97,99,101,104,105,112,],[32,32,32,-61,-63,-62,32,32,32,32,-48,-46,-47,32,-45,32,32,-33,-35,32,32,32,32,-34,32,32,32,32,32,32,32,32,32,]),'DOUBLE':([21,26,27,29,32,33,37,41,48,49,51,52,53,54,55,60,64,80,82,88,89,90,91,93,94,95,96,97,99,101,104,105,112,],[33,33,33,-61,-63,-62,33,33,33,33,-48,-46,-47,33,-45,33,33,-33,-35,33,33,33,33,-34,33,33,33,33,33,33,33,33,33,]),'WHERE':([10,15,20,23,24,25,29,30,32,33,35,39,42,45,59,65,68,72,74,76,78,80,82,83,86,92,93,94,95,96,97,98,100,102,103,106,107,108,109,110,111,115,116,118,],[-49,21,27,-50,41,-51,-61,-57,-63,-62,-59,60,-18,-14,-31,-52,-58,-44,-60,-32,-16,-33,-35,-15,-17,99,-34,-25,-19,-22,-28,112,-26,-27,-39,-20,-21,-23,-24,-29,-30,-36,-37,-38,]),'FROM':([4,10,11,12,13,23,25,65,75,],[9,-49,-12,17,-13,-50,-51,-52,84,]),'NEQ':([29,30,32,33,35,36,68,74,80,81,82,93,],[-61,-57,-63,-62,-59,52,-58,-60,-33,88,-35,-34,]),'EOL':([10,15,20,23,24,25,29,30,31,32,33,34,35,39,42,45,46,59,63,65,68,69,70,72,73,74,76,77,78,80,82,83,86,93,94,95,96,97,100,102,103,106,107,108,109,110,111,115,116,118,],[-49,22,28,-50,43,-51,-61,-57,50,-63,-62,-43,-59,61,-18,-14,67,-31,79,-52,-58,-40,-41,-44,-42,-60,-32,85,-16,-33,-35,-15,-17,-34,-25,-19,-22,-28,-26,-27,-39,-20,-21,-23,-24,-29,-30,-36,-37,-38,]),'$end':([1,3,5,7,22,28,43,50,61,67,79,85,],[-3,0,-1,-2,-10,-4,-6,-11,-7,-5,-8,-9,]),'COMMA':([10,13,23,24,25,29,32,33,45,65,92,],[-49,18,-50,18,-51,-61,-63,-62,66,-52,18,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'select_columns':([6,58,],[12,75,]),'join_clause':([24,78,92,94,95,96,97,],[39,86,98,100,106,108,110,]),'select_statement':([0,],[7,]),'search_condition':([21,27,37,41,48,49,60,99,112,],[31,46,56,63,69,70,77,113,117,]),'inner_select_statement':([37,71,101,],[57,57,57,]),'comparison_predicate':([21,27,37,41,48,49,60,94,95,96,97,99,101,104,105,112,],[34,34,34,34,34,34,34,103,103,103,103,34,103,103,103,34,]),'join_value':([64,88,89,90,91,],[81,94,95,96,97,]),'update_statement':([0,],[5,]),'literal':([21,26,27,37,41,48,49,54,60,64,88,89,90,91,94,95,96,97,99,101,104,105,112,],[35,45,35,35,35,35,35,35,35,82,82,82,82,82,35,35,35,35,35,35,35,35,35,]),'join_list':([24,59,78,92,94,95,96,97,],[42,76,42,42,42,42,42,42,]),'delete_statement':([0,],[1,]),'statement':([0,],[3,]),'join_search_condition':([94,95,96,97,101,104,105,],[102,107,109,111,114,115,116,]),'set_clause_list':([14,66,],[20,83,]),'comp_op':([36,],[54,]),'value':([21,27,37,41,48,49,54,60,94,95,96,97,99,101,104,105,112,],[36,36,36,36,36,36,72,36,36,36,36,36,36,36,36,36,36,]),'id_list':([6,17,58,84,],[13,24,13,92,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> update_statement','statement',1,'p_statement','LexerParser.py',107),
  ('statement -> select_statement','statement',1,'p_statement','LexerParser.py',108),
  ('statement -> delete_statement','statement',1,'p_statement','LexerParser.py',109),
  ('update_statement -> UPDATE ID SET set_clause_list EOL','update_statement',5,'p_update_statement','LexerParser.py',114),
  ('update_statement -> UPDATE ID SET set_clause_list WHERE search_condition EOL','update_statement',7,'p_update_statement','LexerParser.py',115),
  ('select_statement -> SELECT select_columns FROM id_list EOL','select_statement',5,'p_select_statement','LexerParser.py',123),
  ('select_statement -> SELECT select_columns FROM id_list join_clause EOL','select_statement',6,'p_select_statement','LexerParser.py',124),
  ('select_statement -> SELECT select_columns FROM id_list WHERE search_condition EOL','select_statement',7,'p_select_statement','LexerParser.py',125),
  ('select_statement -> SELECT select_columns FROM id_list join_clause WHERE search_condition EOL','select_statement',8,'p_select_statement','LexerParser.py',126),
  ('delete_statement -> DELETE FROM ID EOL','delete_statement',4,'p_delete_statement','LexerParser.py',137),
  ('delete_statement -> DELETE FROM ID WHERE search_condition EOL','delete_statement',6,'p_delete_statement','LexerParser.py',138),
  ('select_columns -> ALL','select_columns',1,'p_select_columns','LexerParser.py',146),
  ('select_columns -> id_list','select_columns',1,'p_select_columns','LexerParser.py',147),
  ('set_clause_list -> ID EQ literal','set_clause_list',3,'p_set_clause_list','LexerParser.py',152),
  ('set_clause_list -> ID EQ literal COMMA set_clause_list','set_clause_list',5,'p_set_clause_list','LexerParser.py',153),
  ('join_clause -> NATURAL JOIN ID','join_clause',3,'p_join_clause','LexerParser.py',161),
  ('join_clause -> NATURAL JOIN ID join_clause','join_clause',4,'p_join_clause','LexerParser.py',162),
  ('join_clause -> join_list','join_clause',1,'p_join_clause','LexerParser.py',163),
  ('join_clause -> join_list ON join_value GT join_value','join_clause',5,'p_join_clause','LexerParser.py',164),
  ('join_clause -> join_list ON join_value GT join_value join_clause','join_clause',6,'p_join_clause','LexerParser.py',165),
  ('join_clause -> join_list ON join_value GT join_value join_search_condition','join_clause',6,'p_join_clause','LexerParser.py',166),
  ('join_clause -> join_list ON join_value LT join_value','join_clause',5,'p_join_clause','LexerParser.py',167),
  ('join_clause -> join_list ON join_value LT join_value join_clause','join_clause',6,'p_join_clause','LexerParser.py',168),
  ('join_clause -> join_list ON join_value LT join_value join_search_condition','join_clause',6,'p_join_clause','LexerParser.py',169),
  ('join_clause -> join_list ON join_value NEQ join_value','join_clause',5,'p_join_clause','LexerParser.py',170),
  ('join_clause -> join_list ON join_value NEQ join_value join_clause','join_clause',6,'p_join_clause','LexerParser.py',171),
  ('join_clause -> join_list ON join_value NEQ join_value join_search_condition','join_clause',6,'p_join_clause','LexerParser.py',172),
  ('join_clause -> join_list ON join_value EQ join_value','join_clause',5,'p_join_clause','LexerParser.py',173),
  ('join_clause -> join_list ON join_value EQ join_value join_clause','join_clause',6,'p_join_clause','LexerParser.py',174),
  ('join_clause -> join_list ON join_value EQ join_value join_search_condition','join_clause',6,'p_join_clause','LexerParser.py',175),
  ('join_list -> JOIN ID','join_list',2,'p_join_list','LexerParser.py',189),
  ('join_list -> JOIN ID join_list','join_list',3,'p_join_list','LexerParser.py',190),
  ('join_value -> ID','join_value',1,'p_join_value','LexerParser.py',198),
  ('join_value -> ID DOT ID','join_value',3,'p_join_value','LexerParser.py',199),
  ('join_value -> literal','join_value',1,'p_join_value','LexerParser.py',200),
  ('join_search_condition -> AND join_search_condition','join_search_condition',2,'p_join_search_condition','LexerParser.py',208),
  ('join_search_condition -> OR join_search_condition','join_search_condition',2,'p_join_search_condition','LexerParser.py',209),
  ('join_search_condition -> LPAREN join_search_condition RPAREN','join_search_condition',3,'p_join_search_condition','LexerParser.py',210),
  ('join_search_condition -> comparison_predicate','join_search_condition',1,'p_join_search_condition','LexerParser.py',211),
  ('search_condition -> search_condition OR search_condition','search_condition',3,'p_search_condition','LexerParser.py',221),
  ('search_condition -> search_condition AND search_condition','search_condition',3,'p_search_condition','LexerParser.py',222),
  ('search_condition -> LPAREN search_condition RPAREN','search_condition',3,'p_search_condition','LexerParser.py',223),
  ('search_condition -> comparison_predicate','search_condition',1,'p_search_condition','LexerParser.py',224),
  ('comparison_predicate -> value comp_op value','comparison_predicate',3,'p_comparison_predicate','LexerParser.py',232),
  ('comp_op -> EQ','comp_op',1,'p_comp_op','LexerParser.py',237),
  ('comp_op -> NEQ','comp_op',1,'p_comp_op','LexerParser.py',238),
  ('comp_op -> GT','comp_op',1,'p_comp_op','LexerParser.py',239),
  ('comp_op -> LT','comp_op',1,'p_comp_op','LexerParser.py',240),
  ('id_list -> ID','id_list',1,'p_id_list','LexerParser.py',245),
  ('id_list -> ID DOT ID','id_list',3,'p_id_list','LexerParser.py',246),
  ('id_list -> id_list COMMA ID','id_list',3,'p_id_list','LexerParser.py',247),
  ('id_list -> id_list COMMA ID DOT ID','id_list',5,'p_id_list','LexerParser.py',248),
  ('inner_select_statement -> SELECT select_columns FROM id_list','inner_select_statement',4,'p_inner_select_statement','LexerParser.py',261),
  ('inner_select_statement -> SELECT select_columns FROM id_list join_clause','inner_select_statement',5,'p_inner_select_statement','LexerParser.py',262),
  ('inner_select_statement -> SELECT select_columns FROM id_list WHERE search_condition','inner_select_statement',6,'p_inner_select_statement','LexerParser.py',263),
  ('inner_select_statement -> SELECT select_columns FROM id_list join_clause WHERE search_condition','inner_select_statement',7,'p_inner_select_statement','LexerParser.py',264),
  ('value -> ID','value',1,'p_value','LexerParser.py',276),
  ('value -> ID DOT ID','value',3,'p_value','LexerParser.py',277),
  ('value -> literal','value',1,'p_value','LexerParser.py',278),
  ('value -> LPAREN inner_select_statement RPAREN','value',3,'p_value','LexerParser.py',279),
  ('literal -> INT','literal',1,'p_literal','LexerParser.py',287),
  ('literal -> DOUBLE','literal',1,'p_literal','LexerParser.py',288),
  ('literal -> STRING','literal',1,'p_literal','LexerParser.py',289),
]

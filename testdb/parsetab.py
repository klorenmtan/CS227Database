
# /home/kat/Desktop/project/CS227Database/testdb/parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.5'

_lr_method = 'LALR'

_lr_signature = '688201B43C8702F98E4C982FEB535497'
    
_lr_action_items = {'FROM':([7,8,9,10,11,19,21,45,81,],[13,-13,-12,15,-49,-51,-50,-52,91,]),'COMMA':([8,11,19,20,21,40,42,43,45,53,97,],[14,-49,-51,14,-50,-61,-62,-63,-52,74,14,]),'SELECT':([0,38,77,99,],[4,64,64,64,]),'ALL':([4,64,],[9,9,]),'DOUBLE':([24,32,34,35,38,40,42,43,46,50,54,55,57,58,59,60,61,66,68,83,84,85,86,92,93,94,95,96,99,100,101,111,115,],[42,42,42,42,42,-61,-62,-63,42,42,42,42,-48,42,-47,-45,-46,-35,-33,42,42,42,42,42,42,42,42,-34,42,42,42,42,42,]),'LPAREN':([24,32,34,38,40,42,43,50,54,55,57,58,59,60,61,66,68,92,93,94,95,96,99,100,101,111,115,],[38,38,38,38,-61,-62,-63,38,38,38,-48,77,-47,-45,-46,-35,-33,99,99,99,99,-34,99,99,99,38,38,]),'AND':([36,39,40,41,42,43,44,51,52,62,66,68,71,75,76,78,79,80,82,92,93,94,95,96,99,100,101,116,118,],[55,-59,-61,-43,-62,-63,-57,55,55,55,-35,-33,55,55,-41,-44,-42,-60,-58,100,100,100,100,-34,100,100,100,55,55,]),'GT':([37,39,40,42,43,44,66,67,68,80,82,96,],[59,-59,-61,-62,-63,-57,-35,84,-33,-60,-58,-34,]),'INT':([24,32,34,35,38,40,42,43,46,50,54,55,57,58,59,60,61,66,68,83,84,85,86,92,93,94,95,96,99,100,101,111,115,],[40,40,40,40,40,-61,-62,-63,40,40,40,40,-48,40,-47,-45,-46,-35,-33,40,40,40,40,40,40,40,40,-34,40,40,40,40,40,]),'JOIN':([11,19,20,21,28,40,42,43,45,48,66,68,69,92,93,94,95,96,97,],[-49,-51,29,-50,47,-61,-62,-63,-52,29,-35,-33,29,29,29,29,29,-34,29,]),'ON':([27,48,70,],[46,-31,-32,]),'OR':([36,39,40,41,42,43,44,51,52,62,66,68,71,75,76,78,79,80,82,92,93,94,95,96,99,100,101,116,118,],[54,-59,-61,-43,-62,-63,-57,54,54,54,-35,-33,54,-40,-41,-44,-42,-60,-58,101,101,101,101,-34,101,101,101,54,54,]),'STRING':([24,32,34,35,38,40,42,43,46,50,54,55,57,58,59,60,61,66,68,83,84,85,86,92,93,94,95,96,99,100,101,111,115,],[43,43,43,43,43,-61,-62,-63,43,43,43,43,-48,43,-47,-45,-46,-35,-33,43,43,43,43,43,43,43,43,-34,43,43,43,43,43,]),'WHERE':([11,18,19,20,21,22,27,30,39,40,42,43,44,45,48,53,66,68,69,70,78,80,82,88,90,92,93,94,95,96,97,98,102,103,104,105,106,107,108,109,110,113,114,117,],[-49,24,-51,32,-50,34,-18,50,-59,-61,-62,-63,-57,-52,-31,-14,-35,-33,-16,-32,-44,-60,-58,-17,-15,-22,-19,-25,-28,-34,111,-24,-23,-39,-21,-20,-27,-26,-30,-29,115,-36,-37,-38,]),'$end':([1,2,3,5,25,31,33,49,56,72,73,89,],[0,-2,-3,-1,-10,-6,-4,-7,-11,-8,-5,-9,]),'SET':([12,],[17,]),'UPDATE':([0,],[6,]),'RPAREN':([11,19,21,27,39,40,41,42,43,44,45,48,62,63,66,68,69,70,75,76,78,79,80,82,88,92,93,94,95,96,97,98,102,103,104,105,106,107,108,109,110,112,113,114,116,117,118,],[-49,-51,-50,-18,-59,-61,-43,-62,-63,-57,-52,-31,79,80,-35,-33,-16,-32,-40,-41,-44,-42,-60,-58,-17,-22,-19,-25,-28,-34,-53,-24,-23,-39,-21,-20,-27,-26,-30,-29,-54,117,-36,-37,-55,-38,-56,]),'NATURAL':([11,19,20,21,40,42,43,45,66,68,69,92,93,94,95,96,97,],[-49,-51,28,-50,-61,-62,-63,-52,-35,-33,28,28,28,28,28,-34,28,]),'LT':([37,39,40,42,43,44,66,67,68,80,82,96,],[57,-59,-61,-62,-63,-57,-35,83,-33,-60,-58,-34,]),'DOT':([11,19,44,68,],[16,26,65,87,]),'EOL':([11,18,19,20,21,22,27,30,36,39,40,41,42,43,44,45,48,51,52,53,66,68,69,70,71,75,76,78,79,80,82,88,90,92,93,94,95,96,98,102,103,104,105,106,107,108,109,113,114,117,],[-49,25,-51,31,-50,33,-18,49,56,-59,-61,-43,-62,-63,-57,-52,-31,72,73,-14,-35,-33,-16,-32,89,-40,-41,-44,-42,-60,-58,-17,-15,-22,-19,-25,-28,-34,-24,-23,-39,-21,-20,-27,-26,-30,-29,-36,-37,-38,]),'ID':([4,6,13,14,15,16,17,24,26,29,32,34,38,40,42,43,46,47,50,54,55,57,58,59,60,61,64,65,66,68,74,83,84,85,86,87,91,92,93,94,95,96,99,100,101,111,115,],[11,12,18,19,11,21,23,44,45,48,44,44,44,-61,-62,-63,68,69,44,44,44,-48,44,-47,-45,-46,11,82,-35,-33,23,68,68,68,68,96,11,44,44,44,44,-34,44,44,44,44,44,]),'EQ':([23,37,39,40,42,43,44,66,67,68,80,82,96,],[35,60,-59,-61,-62,-63,-57,-35,86,-33,-60,-58,-34,]),'DELETE':([0,],[7,]),'NEQ':([37,39,40,42,43,44,66,67,68,80,82,96,],[61,-59,-61,-62,-63,-57,-35,85,-33,-60,-58,-34,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'id_list':([4,15,64,91,],[8,20,8,97,]),'search_condition':([24,32,34,38,50,54,55,111,115,],[36,51,52,62,71,75,76,116,118,]),'value':([24,32,34,38,50,54,55,58,92,93,94,95,99,100,101,111,115,],[37,37,37,37,37,37,37,78,37,37,37,37,37,37,37,37,37,]),'statement':([0,],[1,]),'join_list':([20,48,69,92,93,94,95,97,],[27,70,27,27,27,27,27,27,]),'inner_select_statement':([38,77,99,],[63,63,63,]),'select_columns':([4,64,],[10,81,]),'literal':([24,32,34,35,38,46,50,54,55,58,83,84,85,86,92,93,94,95,99,100,101,111,115,],[39,39,39,53,39,66,39,39,39,39,66,66,66,66,39,39,39,39,39,39,39,39,39,]),'join_search_condition':([92,93,94,95,99,100,101,],[98,104,106,108,112,113,114,]),'comparison_predicate':([24,32,34,38,50,54,55,92,93,94,95,99,100,101,111,115,],[41,41,41,41,41,41,41,103,103,103,103,103,103,103,41,41,]),'select_statement':([0,],[2,]),'delete_statement':([0,],[3,]),'join_clause':([20,69,92,93,94,95,97,],[30,88,102,105,107,109,110,]),'set_clause_list':([17,74,],[22,90,]),'join_value':([46,83,84,85,86,],[67,92,93,94,95,]),'update_statement':([0,],[5,]),'comp_op':([37,],[58,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> update_statement','statement',1,'p_statement','LexerParser.py',107),
  ('statement -> select_statement','statement',1,'p_statement','LexerParser.py',108),
  ('statement -> delete_statement','statement',1,'p_statement','LexerParser.py',109),
  ('update_statement -> UPDATE ID SET set_clause_list EOL','update_statement',5,'p_update_statement','LexerParser.py',114),
  ('update_statement -> UPDATE ID SET set_clause_list WHERE search_condition EOL','update_statement',7,'p_update_statement','LexerParser.py',115),
  ('select_statement -> SELECT select_columns FROM id_list EOL','select_statement',5,'p_select_statement','LexerParser.py',123),
  ('select_statement -> SELECT select_columns FROM id_list join_clause EOL','select_statement',6,'p_select_statement','LexerParser.py',124),
  ('select_statement -> SELECT select_columns FROM id_list WHERE search_condition EOL','select_statement',7,'p_select_statement','LexerParser.py',125),
  ('select_statement -> SELECT select_columns FROM id_list join_clause WHERE search_condition EOL','select_statement',8,'p_select_statement','LexerParser.py',126),
  ('delete_statement -> DELETE FROM ID EOL','delete_statement',4,'p_delete_statement','LexerParser.py',137),
  ('delete_statement -> DELETE FROM ID WHERE search_condition EOL','delete_statement',6,'p_delete_statement','LexerParser.py',138),
  ('select_columns -> ALL','select_columns',1,'p_select_columns','LexerParser.py',146),
  ('select_columns -> id_list','select_columns',1,'p_select_columns','LexerParser.py',147),
  ('set_clause_list -> ID EQ literal','set_clause_list',3,'p_set_clause_list','LexerParser.py',152),
  ('set_clause_list -> ID EQ literal COMMA set_clause_list','set_clause_list',5,'p_set_clause_list','LexerParser.py',153),
  ('join_clause -> NATURAL JOIN ID','join_clause',3,'p_join_clause','LexerParser.py',161),
  ('join_clause -> NATURAL JOIN ID join_clause','join_clause',4,'p_join_clause','LexerParser.py',162),
  ('join_clause -> join_list','join_clause',1,'p_join_clause','LexerParser.py',163),
  ('join_clause -> join_list ON join_value GT join_value','join_clause',5,'p_join_clause','LexerParser.py',164),
  ('join_clause -> join_list ON join_value GT join_value join_clause','join_clause',6,'p_join_clause','LexerParser.py',165),
  ('join_clause -> join_list ON join_value GT join_value join_search_condition','join_clause',6,'p_join_clause','LexerParser.py',166),
  ('join_clause -> join_list ON join_value LT join_value','join_clause',5,'p_join_clause','LexerParser.py',167),
  ('join_clause -> join_list ON join_value LT join_value join_clause','join_clause',6,'p_join_clause','LexerParser.py',168),
  ('join_clause -> join_list ON join_value LT join_value join_search_condition','join_clause',6,'p_join_clause','LexerParser.py',169),
  ('join_clause -> join_list ON join_value NEQ join_value','join_clause',5,'p_join_clause','LexerParser.py',170),
  ('join_clause -> join_list ON join_value NEQ join_value join_clause','join_clause',6,'p_join_clause','LexerParser.py',171),
  ('join_clause -> join_list ON join_value NEQ join_value join_search_condition','join_clause',6,'p_join_clause','LexerParser.py',172),
  ('join_clause -> join_list ON join_value EQ join_value','join_clause',5,'p_join_clause','LexerParser.py',173),
  ('join_clause -> join_list ON join_value EQ join_value join_clause','join_clause',6,'p_join_clause','LexerParser.py',174),
  ('join_clause -> join_list ON join_value EQ join_value join_search_condition','join_clause',6,'p_join_clause','LexerParser.py',175),
  ('join_list -> JOIN ID','join_list',2,'p_join_list','LexerParser.py',189),
  ('join_list -> JOIN ID join_list','join_list',3,'p_join_list','LexerParser.py',190),
  ('join_value -> ID','join_value',1,'p_join_value','LexerParser.py',198),
  ('join_value -> ID DOT ID','join_value',3,'p_join_value','LexerParser.py',199),
  ('join_value -> literal','join_value',1,'p_join_value','LexerParser.py',200),
  ('join_search_condition -> AND join_search_condition','join_search_condition',2,'p_join_search_condition','LexerParser.py',208),
  ('join_search_condition -> OR join_search_condition','join_search_condition',2,'p_join_search_condition','LexerParser.py',209),
  ('join_search_condition -> LPAREN join_search_condition RPAREN','join_search_condition',3,'p_join_search_condition','LexerParser.py',210),
  ('join_search_condition -> comparison_predicate','join_search_condition',1,'p_join_search_condition','LexerParser.py',211),
  ('search_condition -> search_condition OR search_condition','search_condition',3,'p_search_condition','LexerParser.py',221),
  ('search_condition -> search_condition AND search_condition','search_condition',3,'p_search_condition','LexerParser.py',222),
  ('search_condition -> LPAREN search_condition RPAREN','search_condition',3,'p_search_condition','LexerParser.py',223),
  ('search_condition -> comparison_predicate','search_condition',1,'p_search_condition','LexerParser.py',224),
  ('comparison_predicate -> value comp_op value','comparison_predicate',3,'p_comparison_predicate','LexerParser.py',232),
  ('comp_op -> EQ','comp_op',1,'p_comp_op','LexerParser.py',237),
  ('comp_op -> NEQ','comp_op',1,'p_comp_op','LexerParser.py',238),
  ('comp_op -> GT','comp_op',1,'p_comp_op','LexerParser.py',239),
  ('comp_op -> LT','comp_op',1,'p_comp_op','LexerParser.py',240),
  ('id_list -> ID','id_list',1,'p_id_list','LexerParser.py',245),
  ('id_list -> ID DOT ID','id_list',3,'p_id_list','LexerParser.py',246),
  ('id_list -> id_list COMMA ID','id_list',3,'p_id_list','LexerParser.py',247),
  ('id_list -> id_list COMMA ID DOT ID','id_list',5,'p_id_list','LexerParser.py',248),
  ('inner_select_statement -> SELECT select_columns FROM id_list','inner_select_statement',4,'p_inner_select_statement','LexerParser.py',261),
  ('inner_select_statement -> SELECT select_columns FROM id_list join_clause','inner_select_statement',5,'p_inner_select_statement','LexerParser.py',262),
  ('inner_select_statement -> SELECT select_columns FROM id_list WHERE search_condition','inner_select_statement',6,'p_inner_select_statement','LexerParser.py',263),
  ('inner_select_statement -> SELECT select_columns FROM id_list join_clause WHERE search_condition','inner_select_statement',7,'p_inner_select_statement','LexerParser.py',264),
  ('value -> ID','value',1,'p_value','LexerParser.py',276),
  ('value -> ID DOT ID','value',3,'p_value','LexerParser.py',277),
  ('value -> literal','value',1,'p_value','LexerParser.py',278),
  ('value -> LPAREN inner_select_statement RPAREN','value',3,'p_value','LexerParser.py',279),
  ('literal -> INT','literal',1,'p_literal','LexerParser.py',287),
  ('literal -> DOUBLE','literal',1,'p_literal','LexerParser.py',288),
  ('literal -> STRING','literal',1,'p_literal','LexerParser.py',289),
]


# C:\Users\Gladys Tillan\Desktop\LexerParser Oct 19\parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.5'

_lr_method = 'LALR'

_lr_signature = '81A55679C07F02DC6406EFC3F4D4FA5C'
    
_lr_action_items = {'JOIN':([12,25,26,27,37,40,45,53,58,74,76,79,81,98,99,100,],[-43,34,-44,-45,55,-55,-57,34,-46,-29,-27,34,-56,34,-28,34,]),'NEQ':([40,41,45,46,47,74,75,76,81,85,87,99,],[-55,-53,-57,-51,68,-29,68,-27,-56,-54,-52,-28,]),'FROM':([6,10,11,12,13,16,26,27,58,86,],[15,18,-15,-43,-16,23,-44,-45,-46,96,]),'ON':([33,53,77,],[52,-25,-26,]),'DESC':([0,],[5,]),'DOT':([12,27,40,46,76,],[19,39,59,66,93,]),'NATURAL':([12,25,26,27,40,45,58,74,76,79,81,98,99,100,],[-43,37,-44,-45,-55,-57,-46,-29,-27,37,-56,37,-28,37,]),'LPAREN':([28,36,40,44,45,49,56,61,62,67,68,69,70,71,74,76,81,98,99,102,103,105,107,113,],[44,44,-55,44,-57,44,44,44,44,-42,-40,-39,-41,88,-29,-27,-56,105,-28,105,105,105,44,44,]),'DELETE':([0,],[6,]),'ALL':([4,6,65,],[11,16,11,]),'UPDATE':([0,],[8,]),'INT':([28,36,40,44,45,49,51,52,56,59,61,62,67,68,69,70,71,74,76,81,92,98,99,102,103,105,107,113,],[40,40,-55,40,-57,40,40,40,40,81,40,40,-42,-40,-39,-41,40,-29,-27,-56,40,40,-28,40,40,40,40,40,]),'EQ':([32,40,41,45,46,47,74,75,76,81,85,87,99,],[51,-55,-53,-57,-51,69,-29,69,-27,-56,-54,-52,-28,]),'STRING':([28,36,40,44,45,49,51,52,56,61,62,67,68,69,70,71,74,76,81,92,98,99,102,103,105,107,113,],[45,45,-55,45,-57,45,45,45,45,45,45,-42,-40,-39,-41,45,-29,-27,-56,45,45,-28,45,45,45,45,45,]),'$end':([1,2,3,7,9,21,29,35,48,50,57,60,78,90,95,],[-4,-2,0,-3,-1,-14,-12,-7,-11,-5,-8,-13,-9,-6,-10,]),'AND':([40,41,42,43,45,46,54,63,72,74,76,80,81,82,83,84,85,87,89,98,99,102,103,105,112,115,],[-55,-53,61,-37,-57,-51,61,61,61,-29,-27,61,-56,-35,61,-36,-54,-52,-38,102,-28,102,102,102,61,61,]),'EOL':([12,14,22,25,26,27,30,31,33,38,40,41,42,43,45,46,53,54,58,72,73,74,76,77,79,80,81,82,83,84,85,87,89,94,97,98,99,101,104,106,109,110,114,],[-43,21,29,35,-44,-45,48,50,-21,57,-55,-53,60,-37,-57,-51,-25,78,-46,90,-17,-29,-27,-26,-19,95,-56,-35,-34,-36,-54,-52,-38,-20,-18,-22,-28,-24,-33,-23,-30,-31,-32,]),'GT':([40,41,45,46,47,74,75,76,81,85,87,99,],[-55,-53,-57,-51,70,-29,70,-27,-56,-54,-52,-28,]),'COMMA':([12,13,25,26,27,40,45,58,73,81,100,],[-43,20,20,-44,-45,-55,-57,-46,91,-56,20,]),'RPAREN':([12,26,27,33,40,41,43,45,46,53,58,63,64,74,76,77,79,81,82,83,84,85,87,89,94,98,99,100,101,104,106,108,109,110,111,112,114,115,],[-43,-44,-45,-21,-55,-53,-37,-57,-51,-25,-46,84,85,-29,-27,-26,-19,-56,-35,-34,-36,-54,-52,-38,-20,-22,-28,-47,-24,-33,-23,-48,-30,-31,114,-49,-32,-50,]),'OR':([40,41,42,43,45,46,54,63,72,74,76,80,81,82,83,84,85,87,89,98,99,102,103,105,112,115,],[-55,-53,62,-37,-57,-51,62,62,62,-29,-27,62,-56,-35,-34,-36,-54,-52,-38,103,-28,103,103,103,62,62,]),'SELECT':([0,44,88,105,],[4,65,65,65,]),'WHERE':([12,22,25,26,27,31,33,38,40,41,45,46,53,58,73,74,76,77,79,81,85,87,89,94,97,98,99,100,101,104,106,108,109,110,114,],[-43,28,36,-44,-45,49,-21,56,-55,-53,-57,-51,-25,-46,-17,-29,-27,-26,-19,-56,-54,-52,-38,-20,-18,-22,-28,107,-24,-33,-23,113,-30,-31,-32,]),'LT':([40,41,45,46,47,74,75,76,81,85,87,99,],[-55,-53,-57,-51,67,-29,67,-27,-56,-54,-52,-28,]),'ID':([4,5,8,15,18,19,20,23,24,28,34,36,39,40,44,45,49,52,55,56,61,62,65,66,67,68,69,70,71,74,76,81,91,92,93,96,98,99,102,103,105,107,113,],[12,14,17,22,12,26,27,30,32,46,53,46,58,-55,46,-57,46,76,79,46,46,46,12,87,-42,-40,-39,-41,46,-29,-27,-56,32,76,99,12,46,-28,46,46,46,46,46,]),'SET':([17,],[24,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'join_list':([25,53,79,98,100,],[33,77,33,33,33,]),'join_search_condition':([98,102,103,105,],[101,109,110,111,]),'literal':([28,36,44,49,51,52,56,61,62,71,92,98,102,103,105,107,113,],[41,41,41,41,73,74,41,41,41,41,74,41,41,41,41,41,41,]),'search_condition':([28,36,44,49,56,61,62,107,113,],[42,54,63,72,80,82,83,112,115,]),'update_statement':([0,],[9,]),'set_clause_list':([24,91,],[31,97,]),'select_statement':([0,],[2,]),'value':([28,36,44,49,56,61,62,71,98,102,103,105,107,113,],[47,47,47,47,47,47,47,89,47,47,47,47,47,47,]),'comparison_predicate':([28,36,44,49,56,61,62,98,102,103,105,107,113,],[43,43,43,43,43,43,43,104,104,104,104,43,43,]),'inner_select_statement':([44,88,105,],[64,64,64,]),'select_columns':([4,65,],[10,86,]),'id_list':([4,18,65,96,],[13,25,13,100,]),'join_value':([52,92,],[75,98,]),'delete_statement':([0,],[7,]),'comp_op':([47,75,],[71,92,]),'statement':([0,],[3,]),'join_clause':([25,79,98,100,],[38,94,106,108,]),'description_statement':([0,],[1,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> update_statement','statement',1,'p_statement','LexerParser.py',99),
  ('statement -> select_statement','statement',1,'p_statement','LexerParser.py',100),
  ('statement -> delete_statement','statement',1,'p_statement','LexerParser.py',101),
  ('statement -> description_statement','statement',1,'p_statement','LexerParser.py',102),
  ('update_statement -> UPDATE ID SET set_clause_list EOL','update_statement',5,'p_update_statement','LexerParser.py',107),
  ('update_statement -> UPDATE ID SET set_clause_list WHERE search_condition EOL','update_statement',7,'p_update_statement','LexerParser.py',108),
  ('select_statement -> SELECT select_columns FROM id_list EOL','select_statement',5,'p_select_statement','LexerParser.py',116),
  ('select_statement -> SELECT select_columns FROM id_list join_clause EOL','select_statement',6,'p_select_statement','LexerParser.py',117),
  ('select_statement -> SELECT select_columns FROM id_list WHERE search_condition EOL','select_statement',7,'p_select_statement','LexerParser.py',118),
  ('select_statement -> SELECT select_columns FROM id_list join_clause WHERE search_condition EOL','select_statement',8,'p_select_statement','LexerParser.py',119),
  ('delete_statement -> DELETE ALL FROM ID EOL','delete_statement',5,'p_delete_statement','LexerParser.py',130),
  ('delete_statement -> DELETE FROM ID EOL','delete_statement',4,'p_delete_statement','LexerParser.py',131),
  ('delete_statement -> DELETE FROM ID WHERE search_condition EOL','delete_statement',6,'p_delete_statement','LexerParser.py',132),
  ('description_statement -> DESC ID EOL','description_statement',3,'p_description_statement','LexerParser.py',142),
  ('select_columns -> ALL','select_columns',1,'p_select_columns','LexerParser.py',147),
  ('select_columns -> id_list','select_columns',1,'p_select_columns','LexerParser.py',148),
  ('set_clause_list -> ID EQ literal','set_clause_list',3,'p_set_clause_list','LexerParser.py',153),
  ('set_clause_list -> ID EQ literal COMMA set_clause_list','set_clause_list',5,'p_set_clause_list','LexerParser.py',154),
  ('join_clause -> NATURAL JOIN ID','join_clause',3,'p_join_clause','LexerParser.py',162),
  ('join_clause -> NATURAL JOIN ID join_clause','join_clause',4,'p_join_clause','LexerParser.py',163),
  ('join_clause -> join_list','join_clause',1,'p_join_clause','LexerParser.py',164),
  ('join_clause -> join_list ON join_value comp_op join_value','join_clause',5,'p_join_clause','LexerParser.py',165),
  ('join_clause -> join_list ON join_value comp_op join_value join_clause','join_clause',6,'p_join_clause','LexerParser.py',166),
  ('join_clause -> join_list ON join_value comp_op join_value join_search_condition','join_clause',6,'p_join_clause','LexerParser.py',167),
  ('join_list -> JOIN ID','join_list',2,'p_join_list','LexerParser.py',181),
  ('join_list -> JOIN ID join_list','join_list',3,'p_join_list','LexerParser.py',182),
  ('join_value -> ID','join_value',1,'p_join_value','LexerParser.py',190),
  ('join_value -> ID DOT ID','join_value',3,'p_join_value','LexerParser.py',191),
  ('join_value -> literal','join_value',1,'p_join_value','LexerParser.py',192),
  ('join_search_condition -> AND join_search_condition','join_search_condition',2,'p_join_search_condition','LexerParser.py',200),
  ('join_search_condition -> OR join_search_condition','join_search_condition',2,'p_join_search_condition','LexerParser.py',201),
  ('join_search_condition -> LPAREN join_search_condition RPAREN','join_search_condition',3,'p_join_search_condition','LexerParser.py',202),
  ('join_search_condition -> comparison_predicate','join_search_condition',1,'p_join_search_condition','LexerParser.py',203),
  ('search_condition -> search_condition OR search_condition','search_condition',3,'p_search_condition','LexerParser.py',213),
  ('search_condition -> search_condition AND search_condition','search_condition',3,'p_search_condition','LexerParser.py',214),
  ('search_condition -> LPAREN search_condition RPAREN','search_condition',3,'p_search_condition','LexerParser.py',215),
  ('search_condition -> comparison_predicate','search_condition',1,'p_search_condition','LexerParser.py',216),
  ('comparison_predicate -> value comp_op value','comparison_predicate',3,'p_comparison_predicate','LexerParser.py',224),
  ('comp_op -> EQ','comp_op',1,'p_comp_op','LexerParser.py',229),
  ('comp_op -> NEQ','comp_op',1,'p_comp_op','LexerParser.py',230),
  ('comp_op -> GT','comp_op',1,'p_comp_op','LexerParser.py',231),
  ('comp_op -> LT','comp_op',1,'p_comp_op','LexerParser.py',232),
  ('id_list -> ID','id_list',1,'p_id_list','LexerParser.py',237),
  ('id_list -> ID DOT ID','id_list',3,'p_id_list','LexerParser.py',238),
  ('id_list -> id_list COMMA ID','id_list',3,'p_id_list','LexerParser.py',239),
  ('id_list -> id_list COMMA ID DOT ID','id_list',5,'p_id_list','LexerParser.py',240),
  ('inner_select_statement -> SELECT select_columns FROM id_list','inner_select_statement',4,'p_inner_select_statement','LexerParser.py',253),
  ('inner_select_statement -> SELECT select_columns FROM id_list join_clause','inner_select_statement',5,'p_inner_select_statement','LexerParser.py',254),
  ('inner_select_statement -> SELECT select_columns FROM id_list WHERE search_condition','inner_select_statement',6,'p_inner_select_statement','LexerParser.py',255),
  ('inner_select_statement -> SELECT select_columns FROM id_list join_clause WHERE search_condition','inner_select_statement',7,'p_inner_select_statement','LexerParser.py',256),
  ('value -> ID','value',1,'p_value','LexerParser.py',268),
  ('value -> ID DOT ID','value',3,'p_value','LexerParser.py',269),
  ('value -> literal','value',1,'p_value','LexerParser.py',270),
  ('value -> LPAREN inner_select_statement RPAREN','value',3,'p_value','LexerParser.py',271),
  ('literal -> INT','literal',1,'p_literal','LexerParser.py',279),
  ('literal -> INT DOT INT','literal',3,'p_literal','LexerParser.py',280),
  ('literal -> STRING','literal',1,'p_literal','LexerParser.py',281),
]

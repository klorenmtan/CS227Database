
# C:\Users\Gladys Tillan\Desktop\Parser\LexerParser Oct 19 - ID EQ ID (update)\parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.5'

_lr_method = 'LALR'

_lr_signature = '2D20E4914173E82F8805D349745A4097'
    
_lr_action_items = {'COMMA':([11,12,25,26,27,32,33,34,35,56,76,77,78,100,],[18,-43,-45,-44,18,-29,-57,-27,-55,-46,-28,-56,93,18,]),'LPAREN':([30,32,33,34,35,41,45,51,59,66,67,69,70,71,72,73,76,77,99,101,103,106,108,112,],[45,-29,-57,-27,-55,45,45,45,45,45,45,-39,-42,90,-41,-40,-28,-56,101,101,101,101,45,45,]),'RPAREN':([12,25,26,32,33,34,35,38,46,48,50,56,58,64,65,76,77,80,83,85,86,87,88,89,91,96,99,100,102,104,105,107,109,110,111,113,114,115,],[-43,-45,-44,-29,-57,-27,-55,-21,-53,-37,-51,-46,-25,85,86,-28,-56,-26,-19,-36,-54,-34,-35,-38,-52,-20,-22,-47,-33,-23,-24,-48,114,-31,-30,-49,-32,-50,]),'ON':([38,58,80,],[57,-25,-26,]),'DELETE':([0,],[5,]),'NEQ':([32,33,34,35,46,49,50,76,77,79,86,91,],[-29,-57,-27,-55,-53,73,-51,-28,-56,73,-54,-52,]),'GT':([32,33,34,35,46,49,50,76,77,79,86,91,],[-29,-57,-27,-55,-53,72,-51,-28,-56,72,-54,-52,]),'NATURAL':([12,25,26,27,32,33,34,35,56,76,77,83,99,100,],[-43,-45,-44,43,-29,-57,-27,-55,-46,-28,-56,43,43,43,]),'EOL':([12,14,23,25,26,27,28,31,32,33,34,35,38,40,46,47,48,50,56,58,61,75,76,77,78,80,81,83,85,86,87,88,89,91,96,98,99,102,104,105,110,111,114,],[-43,21,29,-45,-44,42,44,52,-29,-57,-27,-55,-21,60,-53,68,-37,-51,-46,-25,82,92,-28,-56,-17,-26,95,-19,-36,-54,-34,-35,-38,-52,-20,-18,-22,-33,-23,-24,-31,-30,-32,]),'$end':([1,3,6,7,8,21,29,42,44,52,60,68,82,92,95,],[0,-4,-2,-3,-1,-14,-12,-7,-11,-5,-8,-13,-9,-6,-10,]),'UPDATE':([0,],[9,]),'EQ':([32,33,34,35,36,46,49,50,76,77,79,86,91,],[-29,-57,-27,-55,55,-53,69,-51,-28,-56,69,-54,-52,]),'SELECT':([0,45,90,101,],[2,63,63,63,]),'JOIN':([12,25,26,27,32,33,34,35,43,56,58,76,77,83,99,100,],[-43,-45,-44,39,-29,-57,-27,-55,62,-46,39,-28,-56,39,39,39,]),'SET':([17,],[24,]),'FROM':([5,10,11,12,13,15,25,26,56,84,],[16,-15,-16,-43,20,22,-45,-44,-46,97,]),'LT':([32,33,34,35,46,49,50,76,77,79,86,91,],[-29,-57,-27,-55,-53,70,-51,-28,-56,70,-54,-52,]),'WHERE':([12,23,25,26,27,31,32,33,34,35,38,40,46,50,56,58,76,77,78,80,83,86,89,91,96,98,99,100,102,104,105,107,110,111,114,],[-43,30,-45,-44,41,51,-29,-57,-27,-55,-21,59,-53,-51,-46,-25,-28,-56,-17,-26,-19,-54,-38,-52,-20,-18,-22,108,-33,-23,-24,112,-31,-30,-32,]),'ALL':([2,5,63,],[10,15,10,]),'OR':([32,33,34,35,46,47,48,50,61,64,75,76,77,81,85,86,87,88,89,91,99,101,103,106,113,115,],[-29,-57,-27,-55,-53,66,-37,-51,66,66,66,-28,-56,66,-36,-54,-34,-35,-38,-52,103,103,103,103,66,66,]),'DESC':([0,],[4,]),'ID':([2,4,9,16,18,19,20,22,24,30,32,33,34,35,37,39,41,45,51,53,55,57,59,62,63,66,67,69,70,71,72,73,74,76,77,93,94,97,99,101,103,106,108,112,],[12,14,17,23,25,26,12,28,34,50,-29,-57,-27,-55,56,58,50,50,50,76,34,34,50,83,12,50,50,-39,-42,50,-41,-40,91,-28,-56,34,34,12,50,50,50,50,50,50,]),'AND':([32,33,34,35,46,47,48,50,61,64,75,76,77,81,85,86,87,88,89,91,99,101,103,106,113,115,],[-29,-57,-27,-55,-53,67,-37,-51,67,67,67,-28,-56,67,-36,-54,67,-35,-38,-52,106,106,106,106,67,67,]),'INT':([24,30,32,33,34,35,41,45,51,54,55,57,59,66,67,69,70,71,72,73,76,77,93,94,99,101,103,106,108,112,],[35,35,-29,-57,-27,-55,35,35,35,77,35,35,35,35,35,-39,-42,35,-41,-40,-28,-56,35,35,35,35,35,35,35,35,]),'STRING':([24,30,32,33,34,35,41,45,51,55,57,59,66,67,69,70,71,72,73,76,77,93,94,99,101,103,106,108,112,],[33,33,-29,-57,-27,-55,33,33,33,33,33,33,33,33,-39,-42,33,-41,-40,-28,-56,33,33,33,33,33,33,33,33,]),'DOT':([12,25,34,35,50,],[19,37,53,54,74,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'join_list':([27,58,83,99,100,],[38,80,38,38,38,]),'comparison_predicate':([30,41,45,51,59,66,67,99,101,103,106,108,112,],[48,48,48,48,48,48,48,102,102,102,102,48,48,]),'statement':([0,],[1,]),'value':([30,41,45,51,59,66,67,71,99,101,103,106,108,112,],[49,49,49,49,49,49,49,89,49,49,49,49,49,49,]),'literal':([24,30,41,45,51,55,57,59,66,67,71,93,94,99,101,103,106,108,112,],[32,46,46,46,46,32,32,46,46,46,46,32,32,46,46,46,46,46,46,]),'join_search_condition':([99,101,103,106,],[105,109,110,111,]),'comp_op':([49,79,],[71,94,]),'description_statement':([0,],[3,]),'join_clause':([27,83,99,100,],[40,96,104,107,]),'search_condition':([30,41,45,51,59,66,67,108,112,],[47,61,64,75,81,87,88,113,115,]),'inner_select_statement':([45,90,101,],[65,65,65,]),'select_statement':([0,],[6,]),'delete_statement':([0,],[7,]),'id_list':([2,20,63,97,],[11,27,11,100,]),'select_columns':([2,63,],[13,84,]),'update_statement':([0,],[8,]),'col_value':([24,55,57,93,94,],[36,78,79,36,99,]),'set_clause_list':([24,93,],[31,98,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> update_statement','statement',1,'p_statement','LexerParser.py',98),
  ('statement -> select_statement','statement',1,'p_statement','LexerParser.py',99),
  ('statement -> delete_statement','statement',1,'p_statement','LexerParser.py',100),
  ('statement -> description_statement','statement',1,'p_statement','LexerParser.py',101),
  ('update_statement -> UPDATE ID SET set_clause_list EOL','update_statement',5,'p_update_statement','LexerParser.py',106),
  ('update_statement -> UPDATE ID SET set_clause_list WHERE search_condition EOL','update_statement',7,'p_update_statement','LexerParser.py',107),
  ('select_statement -> SELECT select_columns FROM id_list EOL','select_statement',5,'p_select_statement','LexerParser.py',115),
  ('select_statement -> SELECT select_columns FROM id_list join_clause EOL','select_statement',6,'p_select_statement','LexerParser.py',116),
  ('select_statement -> SELECT select_columns FROM id_list WHERE search_condition EOL','select_statement',7,'p_select_statement','LexerParser.py',117),
  ('select_statement -> SELECT select_columns FROM id_list join_clause WHERE search_condition EOL','select_statement',8,'p_select_statement','LexerParser.py',118),
  ('delete_statement -> DELETE ALL FROM ID EOL','delete_statement',5,'p_delete_statement','LexerParser.py',129),
  ('delete_statement -> DELETE FROM ID EOL','delete_statement',4,'p_delete_statement','LexerParser.py',130),
  ('delete_statement -> DELETE FROM ID WHERE search_condition EOL','delete_statement',6,'p_delete_statement','LexerParser.py',131),
  ('description_statement -> DESC ID EOL','description_statement',3,'p_description_statement','LexerParser.py',141),
  ('select_columns -> ALL','select_columns',1,'p_select_columns','LexerParser.py',146),
  ('select_columns -> id_list','select_columns',1,'p_select_columns','LexerParser.py',147),
  ('set_clause_list -> col_value EQ col_value','set_clause_list',3,'p_set_clause_list','LexerParser.py',152),
  ('set_clause_list -> col_value EQ col_value COMMA set_clause_list','set_clause_list',5,'p_set_clause_list','LexerParser.py',153),
  ('join_clause -> NATURAL JOIN ID','join_clause',3,'p_join_clause','LexerParser.py',161),
  ('join_clause -> NATURAL JOIN ID join_clause','join_clause',4,'p_join_clause','LexerParser.py',162),
  ('join_clause -> join_list','join_clause',1,'p_join_clause','LexerParser.py',163),
  ('join_clause -> join_list ON col_value comp_op col_value','join_clause',5,'p_join_clause','LexerParser.py',164),
  ('join_clause -> join_list ON col_value comp_op col_value join_clause','join_clause',6,'p_join_clause','LexerParser.py',165),
  ('join_clause -> join_list ON col_value comp_op col_value join_search_condition','join_clause',6,'p_join_clause','LexerParser.py',166),
  ('join_list -> JOIN ID','join_list',2,'p_join_list','LexerParser.py',180),
  ('join_list -> JOIN ID join_list','join_list',3,'p_join_list','LexerParser.py',181),
  ('col_value -> ID','col_value',1,'p_col_value','LexerParser.py',189),
  ('col_value -> ID DOT ID','col_value',3,'p_col_value','LexerParser.py',190),
  ('col_value -> literal','col_value',1,'p_col_value','LexerParser.py',191),
  ('join_search_condition -> AND join_search_condition','join_search_condition',2,'p_join_search_condition','LexerParser.py',199),
  ('join_search_condition -> OR join_search_condition','join_search_condition',2,'p_join_search_condition','LexerParser.py',200),
  ('join_search_condition -> LPAREN join_search_condition RPAREN','join_search_condition',3,'p_join_search_condition','LexerParser.py',201),
  ('join_search_condition -> comparison_predicate','join_search_condition',1,'p_join_search_condition','LexerParser.py',202),
  ('search_condition -> search_condition OR search_condition','search_condition',3,'p_search_condition','LexerParser.py',212),
  ('search_condition -> search_condition AND search_condition','search_condition',3,'p_search_condition','LexerParser.py',213),
  ('search_condition -> LPAREN search_condition RPAREN','search_condition',3,'p_search_condition','LexerParser.py',214),
  ('search_condition -> comparison_predicate','search_condition',1,'p_search_condition','LexerParser.py',215),
  ('comparison_predicate -> value comp_op value','comparison_predicate',3,'p_comparison_predicate','LexerParser.py',223),
  ('comp_op -> EQ','comp_op',1,'p_comp_op','LexerParser.py',228),
  ('comp_op -> NEQ','comp_op',1,'p_comp_op','LexerParser.py',229),
  ('comp_op -> GT','comp_op',1,'p_comp_op','LexerParser.py',230),
  ('comp_op -> LT','comp_op',1,'p_comp_op','LexerParser.py',231),
  ('id_list -> ID','id_list',1,'p_id_list','LexerParser.py',236),
  ('id_list -> ID DOT ID','id_list',3,'p_id_list','LexerParser.py',237),
  ('id_list -> id_list COMMA ID','id_list',3,'p_id_list','LexerParser.py',238),
  ('id_list -> id_list COMMA ID DOT ID','id_list',5,'p_id_list','LexerParser.py',239),
  ('inner_select_statement -> SELECT select_columns FROM id_list','inner_select_statement',4,'p_inner_select_statement','LexerParser.py',252),
  ('inner_select_statement -> SELECT select_columns FROM id_list join_clause','inner_select_statement',5,'p_inner_select_statement','LexerParser.py',253),
  ('inner_select_statement -> SELECT select_columns FROM id_list WHERE search_condition','inner_select_statement',6,'p_inner_select_statement','LexerParser.py',254),
  ('inner_select_statement -> SELECT select_columns FROM id_list join_clause WHERE search_condition','inner_select_statement',7,'p_inner_select_statement','LexerParser.py',255),
  ('value -> ID','value',1,'p_value','LexerParser.py',267),
  ('value -> ID DOT ID','value',3,'p_value','LexerParser.py',268),
  ('value -> literal','value',1,'p_value','LexerParser.py',269),
  ('value -> LPAREN inner_select_statement RPAREN','value',3,'p_value','LexerParser.py',270),
  ('literal -> INT','literal',1,'p_literal','LexerParser.py',278),
  ('literal -> INT DOT INT','literal',3,'p_literal','LexerParser.py',279),
  ('literal -> STRING','literal',1,'p_literal','LexerParser.py',280),
]

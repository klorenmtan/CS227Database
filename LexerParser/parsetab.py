
# C:\Users\Gladys Tillan\Desktop\LexerParser Oct 19\parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.5'

_lr_method = 'LALR'

_lr_signature = '6800AC6C09D5D361F2C58AF0782C78A5'
    
_lr_action_items = {'$end':([2,3,5,7,9,24,29,39,50,54,57,71,81,93,95,],[-1,-4,0,-2,-3,-14,-12,-7,-11,-5,-8,-13,-9,-6,-10,]),'NATURAL':([12,25,26,27,32,33,35,36,62,76,78,79,99,100,],[-43,37,-44,-45,-29,-27,-57,-55,-46,-28,-56,37,37,37,]),'ALL':([1,4,72,],[10,15,10,]),'EOL':([12,17,21,25,26,27,30,32,33,34,35,36,38,42,44,45,46,48,59,60,62,75,76,77,78,79,80,82,84,86,87,88,90,91,94,98,99,101,102,106,110,111,114,],[-43,24,29,39,-44,-45,50,-29,-27,54,-57,-55,57,-21,-53,-37,-51,71,81,-25,-46,-17,-28,93,-56,-19,95,-26,-52,-38,-35,-34,-36,-54,-20,-18,-22,-23,-24,-33,-31,-30,-32,]),'ON':([42,60,82,],[61,-25,-26,]),'GT':([32,33,35,36,44,46,47,76,78,83,84,91,],[-29,-27,-57,-55,-53,-51,67,-28,-56,67,-52,-54,]),'RPAREN':([12,26,27,32,33,35,36,42,44,45,46,60,62,73,74,76,78,79,82,84,86,87,88,90,91,94,99,100,101,102,106,107,109,110,111,113,114,115,],[-43,-44,-45,-29,-27,-57,-55,-21,-53,-37,-51,-25,-46,90,91,-28,-56,-19,-26,-52,-38,-35,-34,-36,-54,-20,-22,-47,-23,-24,-33,-48,114,-31,-30,-49,-32,-50,]),'ID':([1,6,8,14,18,19,20,22,23,28,32,33,35,36,40,41,43,49,51,52,53,56,58,61,63,64,65,66,67,68,69,70,72,76,78,92,96,97,99,103,104,105,108,112,],[12,16,17,21,12,26,27,30,33,46,-29,-27,-57,-55,46,60,62,46,33,76,46,79,46,33,84,-42,46,-39,-41,-40,46,46,12,-28,-56,33,33,12,46,46,46,46,46,46,]),'FROM':([4,10,11,12,13,15,26,27,62,89,],[14,-15,18,-43,-16,22,-44,-45,-46,97,]),'STRING':([23,28,32,33,35,36,40,49,51,53,58,61,64,65,66,67,68,69,70,76,78,92,96,99,103,104,105,108,112,],[35,35,-29,-27,-57,-55,35,35,35,35,35,35,-42,35,-39,-41,-40,35,35,-28,-56,35,35,35,35,35,35,35,35,]),'AND':([32,33,35,36,44,45,46,48,59,73,76,77,78,80,84,86,87,88,90,91,99,103,104,105,113,115,],[-29,-27,-57,-55,-53,-37,-51,69,69,69,-28,69,-56,69,-52,-38,-35,69,-36,-54,105,105,105,105,69,69,]),'DESC':([0,],[8,]),'EQ':([31,32,33,35,36,44,46,47,76,78,83,84,91,],[51,-29,-27,-57,-55,-53,-51,66,-28,-56,66,-52,-54,]),'SELECT':([0,49,85,103,],[1,72,72,72,]),'JOIN':([12,25,26,27,32,33,35,36,37,60,62,76,78,79,99,100,],[-43,41,-44,-45,-29,-27,-57,-55,56,41,-46,-28,-56,41,41,41,]),'OR':([32,33,35,36,44,45,46,48,59,73,76,77,78,80,84,86,87,88,90,91,99,103,104,105,113,115,],[-29,-27,-57,-55,-53,-37,-51,70,70,70,-28,70,-56,70,-52,-38,-35,-34,-36,-54,104,104,104,104,70,70,]),'COMMA':([12,13,25,26,27,32,33,35,36,62,75,76,78,100,],[-43,20,20,-44,-45,-29,-27,-57,-55,-46,92,-28,-56,20,]),'LPAREN':([28,32,33,35,36,40,49,53,58,64,65,66,67,68,69,70,76,78,99,103,104,105,108,112,],[49,-29,-27,-57,-55,49,49,49,49,-42,85,-39,-41,-40,49,49,-28,-56,103,103,103,103,49,49,]),'LT':([32,33,35,36,44,46,47,76,78,83,84,91,],[-29,-27,-57,-55,-53,-51,64,-28,-56,64,-52,-54,]),'DOT':([12,27,33,36,46,],[19,43,52,55,63,]),'DELETE':([0,],[4,]),'WHERE':([12,21,25,26,27,32,33,34,35,36,38,42,44,46,60,62,75,76,78,79,82,84,86,91,94,98,99,100,101,102,106,107,110,111,114,],[-43,28,40,-44,-45,-29,-27,53,-57,-55,58,-21,-53,-51,-25,-46,-17,-28,-56,-19,-26,-52,-38,-54,-20,-18,-22,108,-23,-24,-33,112,-31,-30,-32,]),'UPDATE':([0,],[6,]),'SET':([16,],[23,]),'INT':([23,28,32,33,35,36,40,49,51,53,55,58,61,64,65,66,67,68,69,70,76,78,92,96,99,103,104,105,108,112,],[36,36,-29,-27,-57,-55,36,36,36,36,78,36,36,-42,36,-39,-41,-40,36,36,-28,-56,36,36,36,36,36,36,36,36,]),'NEQ':([32,33,35,36,44,46,47,76,78,83,84,91,],[-29,-27,-57,-55,-53,-51,68,-28,-56,68,-52,-54,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'join_list':([25,60,79,99,100,],[42,82,42,42,42,]),'update_statement':([0,],[2,]),'col_value':([23,51,61,92,96,],[31,75,83,31,99,]),'description_statement':([0,],[3,]),'join_search_condition':([99,103,104,105,],[102,109,110,111,]),'comp_op':([47,83,],[65,96,]),'set_clause_list':([23,92,],[34,98,]),'comparison_predicate':([28,40,49,53,58,69,70,99,103,104,105,108,112,],[45,45,45,45,45,45,45,106,106,106,106,45,45,]),'literal':([23,28,40,49,51,53,58,61,65,69,70,92,96,99,103,104,105,108,112,],[32,44,44,44,32,44,44,32,44,44,44,32,32,44,44,44,44,44,44,]),'value':([28,40,49,53,58,65,69,70,99,103,104,105,108,112,],[47,47,47,47,47,86,47,47,47,47,47,47,47,47,]),'statement':([0,],[5,]),'search_condition':([28,40,49,53,58,69,70,108,112,],[48,59,73,77,80,87,88,113,115,]),'join_clause':([25,79,99,100,],[38,94,101,107,]),'select_columns':([1,72,],[11,89,]),'select_statement':([0,],[7,]),'inner_select_statement':([49,85,103,],[74,74,74,]),'delete_statement':([0,],[9,]),'id_list':([1,18,72,97,],[13,25,13,100,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> update_statement','statement',1,'p_statement','LexerParser.py',99),
  ('statement -> select_statement','statement',1,'p_statement','LexerParser.py',100),
  ('statement -> delete_statement','statement',1,'p_statement','LexerParser.py',101),
  ('statement -> description_statement','statement',1,'p_statement','LexerParser.py',102),
  ('update_statement -> UPDATE ID SET set_clause_list EOL','update_statement',5,'p_update_statement','LexerParser.py',107),
  ('update_statement -> UPDATE ID SET set_clause_list WHERE search_condition EOL','update_statement',7,'p_update_statement','LexerParser.py',108),
  ('select_statement -> SELECT select_columns FROM id_list EOL','select_statement',5,'p_select_statement','LexerParser.py',116),
  ('select_statement -> SELECT select_columns FROM id_list join_clause EOL','select_statement',6,'p_select_statement','LexerParser.py',117),
  ('select_statement -> SELECT select_columns FROM id_list WHERE search_condition EOL','select_statement',7,'p_select_statement','LexerParser.py',118),
  ('select_statement -> SELECT select_columns FROM id_list join_clause WHERE search_condition EOL','select_statement',8,'p_select_statement','LexerParser.py',119),
  ('delete_statement -> DELETE ALL FROM ID EOL','delete_statement',5,'p_delete_statement','LexerParser.py',130),
  ('delete_statement -> DELETE FROM ID EOL','delete_statement',4,'p_delete_statement','LexerParser.py',131),
  ('delete_statement -> DELETE FROM ID WHERE search_condition EOL','delete_statement',6,'p_delete_statement','LexerParser.py',132),
  ('description_statement -> DESC ID EOL','description_statement',3,'p_description_statement','LexerParser.py',142),
  ('select_columns -> ALL','select_columns',1,'p_select_columns','LexerParser.py',147),
  ('select_columns -> id_list','select_columns',1,'p_select_columns','LexerParser.py',148),
  ('set_clause_list -> col_value EQ col_value','set_clause_list',3,'p_set_clause_list','LexerParser.py',153),
  ('set_clause_list -> col_value EQ col_value COMMA set_clause_list','set_clause_list',5,'p_set_clause_list','LexerParser.py',154),
  ('join_clause -> NATURAL JOIN ID','join_clause',3,'p_join_clause','LexerParser.py',162),
  ('join_clause -> NATURAL JOIN ID join_clause','join_clause',4,'p_join_clause','LexerParser.py',163),
  ('join_clause -> join_list','join_clause',1,'p_join_clause','LexerParser.py',164),
  ('join_clause -> join_list ON col_value comp_op col_value','join_clause',5,'p_join_clause','LexerParser.py',165),
  ('join_clause -> join_list ON col_value comp_op col_value join_clause','join_clause',6,'p_join_clause','LexerParser.py',166),
  ('join_clause -> join_list ON col_value comp_op col_value join_search_condition','join_clause',6,'p_join_clause','LexerParser.py',167),
  ('join_list -> JOIN ID','join_list',2,'p_join_list','LexerParser.py',181),
  ('join_list -> JOIN ID join_list','join_list',3,'p_join_list','LexerParser.py',182),
  ('col_value -> ID','col_value',1,'p_col_value','LexerParser.py',190),
  ('col_value -> ID DOT ID','col_value',3,'p_col_value','LexerParser.py',191),
  ('col_value -> literal','col_value',1,'p_col_value','LexerParser.py',192),
  ('join_search_condition -> AND join_search_condition','join_search_condition',2,'p_join_search_condition','LexerParser.py',200),
  ('join_search_condition -> OR join_search_condition','join_search_condition',2,'p_join_search_condition','LexerParser.py',201),
  ('join_search_condition -> LPAREN join_search_condition RPAREN','join_search_condition',3,'p_join_search_condition','LexerParser.py',202),
  ('join_search_condition -> comparison_predicate','join_search_condition',1,'p_join_search_condition','LexerParser.py',203),
  ('search_condition -> search_condition OR search_condition','search_condition',3,'p_search_condition','LexerParser.py',213),
  ('search_condition -> search_condition AND search_condition','search_condition',3,'p_search_condition','LexerParser.py',214),
  ('search_condition -> LPAREN search_condition RPAREN','search_condition',3,'p_search_condition','LexerParser.py',215),
  ('search_condition -> comparison_predicate','search_condition',1,'p_search_condition','LexerParser.py',216),
  ('comparison_predicate -> value comp_op value','comparison_predicate',3,'p_comparison_predicate','LexerParser.py',224),
  ('comp_op -> EQ','comp_op',1,'p_comp_op','LexerParser.py',229),
  ('comp_op -> NEQ','comp_op',1,'p_comp_op','LexerParser.py',230),
  ('comp_op -> GT','comp_op',1,'p_comp_op','LexerParser.py',231),
  ('comp_op -> LT','comp_op',1,'p_comp_op','LexerParser.py',232),
  ('id_list -> ID','id_list',1,'p_id_list','LexerParser.py',237),
  ('id_list -> ID DOT ID','id_list',3,'p_id_list','LexerParser.py',238),
  ('id_list -> id_list COMMA ID','id_list',3,'p_id_list','LexerParser.py',239),
  ('id_list -> id_list COMMA ID DOT ID','id_list',5,'p_id_list','LexerParser.py',240),
  ('inner_select_statement -> SELECT select_columns FROM id_list','inner_select_statement',4,'p_inner_select_statement','LexerParser.py',253),
  ('inner_select_statement -> SELECT select_columns FROM id_list join_clause','inner_select_statement',5,'p_inner_select_statement','LexerParser.py',254),
  ('inner_select_statement -> SELECT select_columns FROM id_list WHERE search_condition','inner_select_statement',6,'p_inner_select_statement','LexerParser.py',255),
  ('inner_select_statement -> SELECT select_columns FROM id_list join_clause WHERE search_condition','inner_select_statement',7,'p_inner_select_statement','LexerParser.py',256),
  ('value -> ID','value',1,'p_value','LexerParser.py',268),
  ('value -> ID DOT ID','value',3,'p_value','LexerParser.py',269),
  ('value -> literal','value',1,'p_value','LexerParser.py',270),
  ('value -> LPAREN inner_select_statement RPAREN','value',3,'p_value','LexerParser.py',271),
  ('literal -> INT','literal',1,'p_literal','LexerParser.py',279),
  ('literal -> INT DOT INT','literal',3,'p_literal','LexerParser.py',280),
  ('literal -> STRING','literal',1,'p_literal','LexerParser.py',281),
]
